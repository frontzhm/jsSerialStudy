Ajax:async javascript and xml (异步的js和XML)
-> 客户端js中的方法,用来向服务器端发送请求(还可以传递给服务器端数据),然后把服务器端返回的数据获取到(ajax一般是运行在客户端的浏览器中的)

ajax四步:
 
->创建一个Ajax对象(下面的这种写法在ie6-8不支持,惰性思想)
var xhr = new XMLHttpRequest;
(控制台 dir(xhr))
->发送前的基本信息配置:配置请求的方式(get post put delete head...),打开一个url地址(向哪一个服务器地址发送请求),同步还是异步(true是异步,false同步,默认是true),向服务器提供请求的用户名,向服务器提供请求的用户密码,这两个值一般不写,只有服务器端做了安全设置,只允许特定的用户访问的话,我们才传递过去

xhr.open("get","/data.txt",false,[username],[userpass]);

->给statechange这个事件绑定一个方法,监听状态的改变
xhr.onreadystatechange = function(){

-> readyState:ajax状态码,代表当前ajax处理的进度
	0 unset 当前请求还没有发送
	1 opened url地址已经打开(发送前的参数配置已经完成)
	2 headers_received 响应头信息已经接受
	3 loading 主要返回的内容正在服务器端准备处理
	4 done 响应主体的内容已经成功返回到客户端

-> xhr.status:HTTP状态码,描述了服务器响应内容的状态
200 或者 以2开头的三位数 均代表响应主体内容已经成功返回
301 永久重定向/永久转移 (www.360buy.com -> www.jd.com)
302 临时重定向/临时转移 服务器的负载均衡 (经常用作图片,处理很大的请求量,服务器集群)
304 本次获取的内容是读取缓存中的数据 (很重要,有时间研究,可以自己做304)

(带着胸牌,去中南海搬块石头)
400 ->客户端传递给服务器端的参数出现错误(忘了带胸牌)
401 -> 无权限访问(权限不够)
404 ->客户端访问的地址不存在(中南海不存在)

500 ->未知的服务器错误
503 ->服务器已经超负荷,dang掉了,一台服务器能承受1w人,那么多一个人的话,如果没有做服务器的负载均衡,那么这个人的状态码是503

	if(xhr.readyState === 4 && /^2\d{2}$/.test(xhr.status)){
		var val = xhr.responseText;
	}
}
-> 发送请求:参数是请求主体中传递给服务器的内容
xhr.send(null);













xml:可扩展的标记语言(在xml中使用的标签是自己扩展的)
->利用自己扩展的有规则的标记来存储相关的数据(优化网站,有时间继续研究) 